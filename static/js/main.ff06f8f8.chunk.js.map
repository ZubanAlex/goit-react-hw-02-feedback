{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/App/App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/App/App.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","isNaN","FeedbackOptions","options","onLeaveFeedback","console","log","Object","keys","map","option","className","styles","button","type","name","onClick","key","Section","title","children","Notification","message","App","state","countTotalFeedback","Number","countPositiveFeedbackPercentage","totalPositiveFeedbackPercentage","Math","round","addReview","e","target","setState","prevState","this","container","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"oSA2BeA,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,6BACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GAET,sCAAYC,IAEVE,MAAMD,IACN,kDAAwBA,EAAxB,O,gBCkBOE,EA1BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAElC,OADAC,QAAQC,IAAIC,OAAOC,KAAKL,IAEtB,6BACGI,OAAOC,KAAKL,GAASM,KAAI,SAAAC,GACxB,OACE,4BACEC,UAAWC,IAAOC,OAClBC,KAAK,SACLC,KAAML,EACNM,QAASZ,EACTa,IAAKP,GAEJA,QCFEQ,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BACE,4BAAKD,GACJC,ICOQC,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,6BACE,4BAAKA,K,gBCGUC,E,2MACnBC,MAAQ,CACN5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP2B,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAA5B5B,EADiB,EACjBA,KAAMC,EADW,EACXA,QAASC,EADE,EACFA,IAEvB,OAAO4B,OADO9B,EAAOC,EAAUC,I,EAIjC6B,gCAAkC,WAAO,IAC/B/B,EAAS,EAAK4B,MAAd5B,KACFgC,EAAkCC,KAAKC,MAC1ClC,EAAO,EAAK6B,qBAAwB,KAGvC,OAAOC,OAAOE,I,EAGhBG,UAAY,SAAAC,GAAM,IACRjB,EAASiB,EAAEC,OAAXlB,KACR,EAAKmB,UAAS,SAAAC,GAAS,sBACpBpB,EAAOoB,EAAUpB,GAAQ,O,wEAIpB,IAAD,EACwBqB,KAAKZ,MAA5B5B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,yBAAKa,UAAWC,IAAOyB,WACrB,kBAAC,EAAD,CAASlB,MAAO,yBACd,kBAAC,EAAD,CACEhB,QAASiC,KAAKZ,MACdpB,gBAAiBgC,KAAKL,aAG1B,kBAAC,EAAD,CAASZ,MAAO,cACbiB,KAAKX,qBAAuB,EAC3B,kBAAC,EAAD,CACE7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqC,KAAKX,qBACZzB,mBAAoBoC,KAAKT,oCAG3B,kBAAC,EAAD,CAAcL,QAAQ,4B,GAjDDgB,aCJjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,OAAS,kC,kBCA3BD,EAAOC,QAAU,CAAC,UAAY,0B","file":"static/js/main.ff06f8f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n\r\n      <h4>Total: {total}</h4>\r\n\r\n      {!isNaN(positivePercentage) && (\r\n        <h4>Positive Feedback: {positivePercentage}%</h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: T.number.isRequired,\r\n  neutral: T.number.isRequired,\r\n  bad: T.number.isRequired,\r\n  total: T.number.isRequired,\r\n  positivePercentage: T.func.isRequired\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  console.log(Object.keys(options));\r\n  return (\r\n    <div>\r\n      {Object.keys(options).map(option => {\r\n        return (\r\n          <button\r\n            className={styles.button}\r\n            type=\"button\"\r\n            name={option}\r\n            onClick={onLeaveFeedback}\r\n            key={option}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: T.object.isRequired,\r\n  onLeaveFeedback: T.func.isRequired\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: T.string.isRequired\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <div>\r\n      <h3>{message}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: T.string.isRequired\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"../Section/Section\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    return Number(total);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const totalPositiveFeedbackPercentage = Math.round(\r\n      (good / this.countTotalFeedback()) * 100\r\n    );\r\n\r\n    return Number(totalPositiveFeedbackPercentage);\r\n  };\r\n\r\n  addReview = e => {\r\n    const { name } = e.target;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Section title={\"Pleace leave feedback\"}>\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.addReview}\r\n          />\r\n        </Section>\r\n        <Section title={\"Statistics\"}>\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2iHWc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__u87Y_\"};"],"sourceRoot":""}